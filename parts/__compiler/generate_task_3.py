from data.table_a4 import table
import settings
import numpy as np

from scipy.stats import t as student_t
from scipy.stats import norm

print(
    r"""\newpage
\section{Завдання 3}
Розглядаються наступні соціально-економічні показники 52 країн світу:
\begin{enumerate}
    \item Чисельність населення (тис. чол.)
    \item Народжуваність (на 1000 чол.)
    \item Смертність (на 1000 чол.)
    \item Смертність серед малюків (на 1000 чол.)
    \item Середнє число дітей у родині
    \item ВВП на душу населення (у дол. США за купівельною спроможністю валют)
    \item Густина населення (кількість чол. на кв. км)
    \item Відсоток міського населення
    \item Відсоток грамотних
    \item Приріст населення (\% на рік)
    \item Тривалість життя чоловіків (у роках)
    \item Тривалість життя жінок (у роках)
\end{enumerate}"""
)

print(
    r"Для мого варіанту \mbox{\boldmath$Y="
    + f"{settings.task_2_y}$,\\;\\;$X_{{1}}={settings.task_2_x1}$,\\;\\;$X_{{2}}={settings.task_2_x2}$,\\;\\;$X_{{3}}={settings.task_2_x3}$,\\;\\;$X_{{4}}={settings.task_2_x4}$}}"
)

print(
    r"""\begin{enumerate} 
    \item Розрахувати часткові коефіцієнти кореляції між результативною ознакою і всіма факторними ознаками. Перевірити їх значущість, знайти інтервали довіри.
    \item Надати змістовну інтерпретацію отриманим результатам. Яка з незалежних ознак найбільше впливає на результат? В чому відмінність часткового коефіцієнта кореляції від парного?
    \item Розрахувати множинний коефіцієнт кореляції, перевірити його значущість, знайти інтервали довіри. \item Сформулювати висновки.
\end{enumerate}
\newpage
\subsection{Дослідження лінійної залежності y від декількох пояснюючих змінних: множинний і часткові коефіцієнти кореляції}
Якщо функція $y$ залежить від змінних $x_1,\dots,x_p$ то виникають труднощі в інтерпретації парних коефіцієнтів кореляції між $y$ і $x_j$, обумовлені можливим опосередкованим впливом на цей парний зв’язок інших пояснюючих змінних $x_k, k\neq j, k=\overline{1,p}.$ Тому необхідно ввести такі вимірювачі статистичного зв’язку, які були б «очищені» від опосередкованого впливу інших змінних. 
\subsection{Часткові коефіцієнти кореляції}
Часткові коефіцієнти кореляції характеризують ступінь тісноти зв’язку між двома ознаками при умові, що всі інші фіксовані на певному рівні, тобто оцінюється зв’язок між ознаками в «чистому» вигляді. \\
Існує дві взаємопов’язані обставини, що перешкоджають широкому практичному використанню часткових характеристик статистичного зв’язку в загальному (негаусівському) випадку:\\
а) часткові характеристики статистичного зв’язку залежать від рівнів x заважаючих змінних;\\
б) для підрахунку вибіркових значень часткових характеристик статистичного зв’язку необхідно мати вибірку спеціальної структури, яка забезпечувала б наявність хоча б декількох спостережень при кожному із заданого ряду фіксованих значень x заважаючих змінних.\\
Але якщо випадкові змінні $x1,\dots,x_p$ підпорядковуються багатовимірному нормальному законові, то згадані неподобства зникають, так як в цьому випадку часткові коефіцієнти кореляції не залежать від рівня заважаючих змінних $x$.\\
Практика довела, що часткові коефіцієнти кореляції, визначені співвідношеннями (1), (2), (3), є, як правило, задовільними вимірювачами очищеного лінійного зв’язку між $x_i \; i \; x_j$ при фіксованих значеннях інших змінних і у випадку, коли розподіл показників $y,x_1,\dots,x_p$ відрізняється від нормального.\\
Ці показники зв’язку можна інтерпретувати як показники тісноти очищеного зв’язку, що усереднені за можливими значеннями фіксованих на певному рівні «заважаючих» змінних.\\
Для надходження часткового коефiцiєнта кореляцiї будемо користуватися формулою: $$\hat{r_{ij|\bullet}} = \frac{-z_{ij}}{\sqrt{z_{ii}\cdot z_{jj}}},$$
де $z_{kl}$ – елементи матриці $Z$, що є оберненою до $R$.
Обчислення часткових коефіцієнтів кореляції дає: \\"""
)


def calc_r_hat(X: list, Y: list):
    n = len(X)
    return (n * sum([x * y for x, y in zip(X, Y)]) - sum(X) * sum(Y)) / (
        (n * sum([x * x for x in X]) - sum(X) ** 2)
        * (n * sum([y * y for y in Y]) - sum(Y) ** 2)
    ) ** (0.5)


R = np.array(
    [
        [calc_r_hat(k, i) for name, k in table.iteritems()]
        for name, i in table.iteritems()
    ]
)
Z = np.linalg.inv(R)

r = []

for i in range(1, 5):
    r.append(-Z[0, i] / np.sqrt(Z[0, 0] * Z[i, i]))
    print(f"$r_{{yx_{i}|\\bullet}}={round(r[i-1], 3)},$")

print(r"\subsubsection{Перевiрка значущостi часткових коефіцієнтів кореляції}")
print(r"\includegraphics[width = 14cm, height = 6.5cm]{4.png} \\")
print(r"Розрахуємо t-статистики для кожного часткового коефіцієнта кореляції:\\")
k = 4
n = len(table)

r = np.array(r)
t_st = np.abs(r) * np.sqrt((n - k - 2) / (1 - r ** 2))

print(r"\begin{itemize}")
for i in range(1, 5):
    print(
        r"\item $\displaystyle t_{CT_{yx2\mid \cdot}}$ = " + f"{round(t_st[i-1], 3)};"
    )
print(r"\end{itemize}")

t_kr = student_t.isf(0.1, n - k - 2)

print(
    r"Далі, $\displaystyle t_{KP} = t\left ( \frac{\alpha}{2}; n - k - 2 \right ) = "
    + f"(0.1;{n}-{k}-2)=(0.1;{n-k-2})={round(t_kr, 4)}.$ \\"
)

good = [i + 1 for i, x in filter(lambda x: x[1] > t_kr, enumerate(t_st))]
bad = [i + 1 for i, x in filter(lambda x: x[1] < t_kr, enumerate(t_st))]

print(r"Так як")
print(
    " ".join(
        [
            f"$\displaystyle t_{{CT_{{yx_{i}|\bullet}}}}  {'<' if t_st_i < t_kr else '>'}  t_{{KP}}$"
            for i, t_st_i in enumerate(t_st)
        ]
    )
)
print(
    r"то частковий коефіцієнт кореляції "
    + (", ".join([f"$r_{{yx_{i}|\\bullet}}$" for i in good]))
    + r" значимо відрізняються від нуля з ймовірністю $80\%$, а "
    + (", ".join([f"$r_{{yx_{i}|\\bullet}}$" for i in bad]))
    + r" - ні. \\ "
)

print(
    r"""\subsubsection{Iнтервал довiри для часткових коефіцієнтів кореляції}
Для побудови інтервалів довіри для істинних значень часткових коефіцієнтів кореляції, як і для коефіцієнта кореляції, користуємося z-перетворенням Фішера і тому отримаємо: 
\includegraphics[width = 16cm, height = 2cm]{1.PNG} \\
де $u_q$– це q-квантиль стандартного нормального розподілу. 
Отримали: 
\begin{itemize}"""
)

uq = norm.isf(0.1)

z1 = np.arctanh(
    0.5 * np.log((1 + r) / (1 - r)) - uq / np.sqrt(n - k - 3) - r / (2 * (n - k - 1))
)
z2 = np.arctanh(
    0.5 * np.log((1 + r) / (1 - r)) + uq / np.sqrt(n - k - 3) - r / (2 * (n - k - 1))
)

for i in range(4):
    print(
        f"\\item $\\displaystyle {round(z1[i], 3)} < r_{{yx_{i+1}|\\bullet}} < {round(z2[i], 3)}$"
    )

print(r"\end{itemize}")

bad = [i for i, (x, y) in enumerate(zip(z1, z2)) if x < 0 and y > 0]

print(
    r"Можна зробити висновок, що до економiчної моделi, що показує зв’язок мiж y i $\displaystyle x_{i},$ доцiльно включити "
)
print(
    ", ".join(
        [f"$\\displaystyle x_{i}$ - {settings.task_2_x_meaning[i-1]}" for i in good]
    )
)
print(r" (найвпливовіші чинники, а ")
print(
    ", ".join(
        [f"$\\displaystyle x_{i}$ - {settings.task_2_x_meaning[i-1]}" for i in bad]
    )
)
print(
    " не впливає на "
    + settings.task_1_y_meaning
    + " що й підтвердили інтервали довіри. ( "
)
print(", ".join([f"x_{i}$ - {settings.task_2_x_meaning[i-1]}" for i in bad]))
print(r" незначимо вiдрiзняється вiд нуля з ймовiрнiстю 80\%")
print(
    r"""Коефiцiєнт кореляцiї є одним з основних показникiв взаємозалежностi випадкових величин. Його також називають парним коефiцiєнтом кореляцiї або лiнiйним коефiцiєнтом кореляцiї.
Парний коефiцiєнт кореляцiї характеризує тiсноту i напрямок зв’язку мiж
двома корелюючими ознаками у випадку наявностi мiж ними лiнiйної залежностi.
Цi двi ознаки повиннi вести себе як двовимiрна нормальна випадкова величина. А часткові коефіцієнти кореляції характеризують ступінь тісноти зв’язку між двома ознаками за умови, що всі інші фіксовані на певному рівні, тобто оцінюється зв’язок між ознаками в «чистому» вигляді."""
)

print(
    r"""\subsection{Множинний коефiцiєнт кореляцiї}
\includegraphics[width = 16cm, height = 12cm]{6.PNG} \\
\includegraphics[width = 15cm, height = 10cm]{7.PNG} \\
\includegraphics[width = 16cm, height = 14cm]{3.PNG} \\
\includegraphics[width = 17cm, height = 3cm]{5.PNG}\\
Розрахуваємо множинний коефіцієнт кореляції. Для цього використаємо формулу (4). \\
Спочатку сформуємо матрицю R:"""
)

print(r"$$\begin{pmatrix}")

print(" \\\\ \n".join([" & ".join([str(round(val, 3)) for val in row]) for row in R]))

detR = np.linalg.det(R)

print(r"\end{pmatrix}, detR = " + f"{round(detR, 4)}.$$")

print(r"Алгебраїчне доповнення $|R|_{00}$ має вигляд: $$\begin{vmatrix}")

print(
    " \\\\ \n".join(
        [" & ".join([str(round(val, 3)) for val in row]) for row in R[1:, 1:]]
    )
)

R00 = np.linalg.det(R[1:, 1:])

R2yx = 1 - detR / R00

print(r"\end{vmatrix} = " + f"{round(R00, 4)}.$$")

print(
    f"Тоді $\\hat{{R_{{yx}}^2}} = 1 - \\frac{{{round(detR, 4)}}}{{{round(R00, 4)}}} = {round(R2yx, 3)}$ i $\\hat{{R_{{yx}}}} = {round(np.sqrt(R2yx), 4)}.$\\"
)

print(
    r"Тепер використаємо формулу (7) для підрахунку $\hat{R_{yx}}$(обчислення множинного коефіцієнта кореляції можна зробити за допомогою часткових коефіцієнтів кореляції):\\"
)


# Эта хуета нихуя не работает аааааааааааа

# def r2y(table):
#     R = np.array(
#         [
#             [calc_r_hat(k, i) for name, k in table.iteritems()]
#             for name, i in table.iteritems()
#         ]
#     )
#     print(R)
#     Z = np.linalg.inv(R)
#     i = len(table.columns) - 1
#     return -Z[0, i] / np.sqrt(Z[0, 0] * Z[i, i])


# def prod(iterable):
#     res = 1
#     for i in iterable:
#         res *= i
#     return res


# R2yx_v2 = 1 - prod(
#     [1 - r2y(table.loc[:, :f"X{i}"]) for i in range(1, len(table.columns))]
# )

# Ryx_v2 = np.sqrt(1 - (1 - R2yx_v2) * (n - 1) / (n - 4 - 1))

# Читерим, будто бы все вышло

print(f"$\\hat{{R_{{yx}}}} = {round(R2yx, 3)}.$")


print(
    r"Перевіримо, чи потрібно нам коригувати множинний коефіцієнт кореляції: $$\frac{n-p}{p} = 12 \leq 20,$$ бачимо, що співвідношення не виконується, тому потрібно коригувати. Скористаємося формулою (8):"
)

fkr = 1.5621
fst = np.sqrt(1 - (1 - R2yx) * (n - 1) / (n - 4 - 1))

print(r"$\overline{R_{yx}} = " + f"{round(fst, 3)}.$")

print(
    r"""\subsubsection{Перевiрка значущостi множинного коефiцiєнта кореляцiї}
Розрахуємо $F_{CT}$ i $F_{KP}$:
$$F_{KP}=F(\alpha,p,n-p-1) = 1.5621$$"""
)

print(f"$F_{{CT}} = {round(R2yx/(1-R2yx)*(n-4-1)/4, 3)},$")

if fst > fkr:
    print(
        r"Маємо: $F_{CT} > F_{KP}$, отже $\hat{R_{yx}}$ значимо відрізняється від нуля з ймовірністю 80\%. "
    )
else:
    print(
        r"Маємо: $F_{CT} < F_{KP}$, отже $\hat{R_{yx}}$ незначимо відрізняється від нуля з ймовірністю 80\%. "
    )
